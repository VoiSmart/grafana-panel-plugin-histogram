{"version":3,"sources":["../src/histogram_ctrl.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ;;AACA;;AACD;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAEM;;;;;AAEX,iBAFW,aAEX,CAAY,MAAZ,EAAoB,SAApB,EAA+B,UAA/B,EAA2C;gCAFhC,eAEgC;;AACzC,cAAI,iBAAiB;AACnB,4BAAgB,0BAAW,EAAX;WADd,CADqC;;6EAFhC,0BAOH,QAAQ,WAAW,iBALgB;;AAMzC,gBAAK,UAAL,GAAkB,UAAlB,CANyC;AAOzC,gBAAK,cAAL,GAAsB,cAAtB,CAPyC;;SAA3C;;qBAFW;;2CAYM;AACf,iBAAK,YAAL,CAAkB,QAAlB,EAA4B,gDAA5B,EAA8E,CAA9E,EADe;AAEf,iBAAK,YAAL,CAAkB,SAAlB,EAA6B,yDAA7B,EAAwF,CAAxF,EAFe;AAGf,iBAAK,YAAL,CAAkB,mBAAlB,EAAuC,yDAAvC,EAAkG,CAAlG,EAHe;;AAKf,iBAAK,SAAL,GAAiB;AACf,wBAAU,CAAV;AACA,8BAAgB,CAAhB;AACA,+BAAiB,EAAjB;AACA,+BAAiB,EAAjB;AACA,iCAAmB,IAAnB;aALF,CALe;AAYf,iBAAK,WAAL,GAAmB,IAAI,cAAJ,EAAnB,CAZe;;;;uCAeJ,YAAY;AACvB,8CA5BS,2DA4BiB,WAA1B,CADuB;;;;6CAIN,cAAc;AAC/B,iBAAK,cAAL,CAAoB,YAApB,EAD+B;;;;yCAIlB,UAAU;;AAEvB,gBAAI,EAAE,QAAF,CAAW,QAAX,CAAJ,EAA0B;AACxB,mBAAK,MAAL,CAAY,QAAZ,EADwB;AAExB,qBAFwB;aAA1B;;AAKA,iBAAK,iBAAL,GAAyB,KAAzB,CAPuB;AAQvB,iBAAK,eAAL,GAAuB,CAAvB,CARuB;AASvB,iBAAK,iBAAL,GAAyB,KAAzB,CATuB;AAUvB,iBAAK,UAAL,GAAkB,SAAS,GAAT,CAAa,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAAb,CAAlB,CAVuB;AAWvB,iBAAK,iBAAL,GAAyB,KAAK,eAAL,KAAyB,CAAzB,IAA8B,KAAK,iBAAL,CAXhC;;AAavB,iBAAK,OAAL,GAAe,KAAf,CAbuB;AAcvB,iBAAK,UAAL,CAAgB,WAAhB,GAA8B,IAA9B,CAduB;AAevB,iBAAK,MAAL,CAAY,KAAK,UAAL,CAAZ,CAfuB;;;;eAnCd;QAAsB;;;;AAsDnC,oBAAc,QAAd,GAAyB,QAAzB","file":"histogram_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {GraphCtrl} from 'app/plugins/panel/graph/module';\nimport kbn from 'app/core/utils/kbn';\nimport template from './template';\n\nexport class HistogramCtrl extends GraphCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $rootScope) {\n    var annotationsSrv = {\n      getAnnotations: function() {}\n    };\n\n    super($scope, $injector, annotationsSrv);\n    this.$rootScope = $rootScope;\n    this.annotationsSrv = annotationsSrv;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html', 2);\n    this.addEditorTab('Display', 'public/plugins/grafana-histogram-panel/tab_display.html', 3);\n    this.addEditorTab('Histogram Options', 'public/plugins/grafana-histogram-panel/tab_options.html', 4);\n\n    this.logScales = {\n      'linear': 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024\n    };\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  issueQueries(datasource) {\n    return super.issueQueries(datasource);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataReceived(dataList) {\n    // png renderer returns just a url\n    if (_.isString(dataList)) {\n      this.render(dataList);\n      return;\n    }\n\n    this.datapointsWarning = false;\n    this.datapointsCount = 0;\n    this.datapointsOutside = false;\n    this.seriesList = dataList.map(this.seriesHandler.bind(this));\n    this.datapointsWarning = this.datapointsCount === 0 || this.datapointsOutside;\n\n    this.loading = false;\n    this.seriesList.annotations = null;\n    this.render(this.seriesList);\n  }\n}\n\nHistogramCtrl.template = template;\n"]}