{"version":3,"sources":["../src/histogram_ctrl.js"],"names":[],"mappings":"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","file":"histogram_ctrl.js","sourcesContent":["import 'app/plugins/panel/graph/legend';\nimport 'app/plugins/panel/graph/series_overrides_ctrl';\n\nimport template from './template';\nimport angular from 'angular';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport * as fileExport from 'app/core/utils/file_export';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nexport class HistogramCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, annotationsSrv) {\n    super($scope, $injector);\n\n    this.annotationsSrv = annotationsSrv;\n    this.hiddenSeries = {};\n    this.seriesList = [];\n    this.colors = [];\n\n    var panelDefaults = {\n      // datasource name, null = default datasource\n      datasource: null,\n      // sets client side (flot) or native graphite png renderer (png)\n      renderer: 'flot',\n      yaxes: [\n        {\n          label: null,\n          show: true,\n          logBase: 1,\n          min: null,\n          max: null,\n          format: 'short'\n        },\n        {\n          label: null,\n          show: true,\n          logBase: 1,\n          min: null,\n          max: null,\n          format: 'short'\n        }\n      ],\n      xaxis: {\n        show: true\n      },\n      grid          : {\n        threshold1: null,\n        threshold2: null,\n        threshold1Color: 'rgba(216, 200, 27, 0.27)',\n        threshold2Color: 'rgba(234, 112, 112, 0.22)'\n      },\n      // show/hide lines\n      lines         : true,\n      // fill factor\n      fill          : 1,\n      // line width in pixels\n      linewidth     : 2,\n      // show hide points\n      points        : false,\n      // point radius in pixels\n      pointradius   : 5,\n      // show hide bars\n      bars          : false,\n      // enable/disable stacking\n      stack         : false,\n      // stack percentage mode\n      percentage    : false,\n      // legend options\n      legend: {\n        show: true, // disable/enable legend\n        values: false, // disable/enable legend values\n        min: false,\n        max: false,\n        current: false,\n        total: false,\n        avg: false\n      },\n      // how null points should be handled\n      nullPointMode : 'connected',\n      // staircase line mode\n      steppedLine: false,\n      // tooltip options\n      tooltip       : {\n        value_type: 'cumulative',\n        shared: true,\n        ordering: 'alphabetical',\n        msResolution: false,\n      },\n      // time overrides\n      timeFrom: null,\n      timeShift: null,\n      // metric queries\n      targets: [{}],\n      // series color overrides\n      aliasColors: {},\n      // other style overrides\n      seriesOverrides: [],\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.tooltip, panelDefaults.tooltip);\n    _.defaults(this.panel.grid, panelDefaults.grid);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    this.colors = $scope.$root.colors;\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html', 2);\n    this.addEditorTab('Display', 'public/plugins/grafana-histogram-panel/tab_display.html', 3);\n    this.addEditorTab('Histogram Options', 'public/plugins/grafana-histogram-panel/tab_options.html', 4);\n\n    this.logScales = {\n      'linear': 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024\n    };\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({text: 'Export CSV (series as rows)', click: 'ctrl.exportCsv()'});\n    actions.push({text: 'Export CSV (series as columns)', click: 'ctrl.exportCsvColumns()'});\n    actions.push({text: 'Toggle legend', click: 'ctrl.toggleLegend()'});\n  }\n\n  setUnitFormat(axis, subItem) {\n    axis.format = subItem.value;\n    this.render();\n  }\n\n  issueQueries(datasource) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations(this.dashboard);\n    return super.issueQueries(datasource);\n  }\n\n  zoomOut(evt) {\n    this.publishAppEvent('zoom-out', evt);\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations(this.dashboard);\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.render([]);\n  }\n\n  onDataReceived(dataList) {\n    // png renderer returns just a url\n    if (_.isString(dataList)) {\n      this.render(dataList);\n      return;\n    }\n\n    this.datapointsWarning = false;\n    this.datapointsCount = 0;\n    this.datapointsOutside = false;\n    this.seriesList = dataList.map(this.seriesHandler.bind(this));\n    this.datapointsWarning = this.datapointsCount === 0 || this.datapointsOutside;\n\n    this.annotationsPromise.then(annotations => {\n      this.loading = false;\n      this.seriesList.annotations = annotations;\n      this.render(this.seriesList);\n    }, () => {\n      this.loading = false;\n      this.render(this.seriesList);\n    });\n  }\n\n  seriesHandler(seriesData, index) {\n    var datapoints = seriesData.datapoints;\n    var alias = seriesData.target;\n    var colorIndex = index % this.colors.length;\n    var color = this.panel.aliasColors[alias] || this.colors[colorIndex];\n\n    var series = new TimeSeries({\n      datapoints: datapoints,\n      alias: alias,\n      color: color,\n      unit: seriesData.unit,\n    });\n\n    if (datapoints && datapoints.length > 0) {\n      var last = moment.utc(datapoints[datapoints.length - 1][1]);\n      var from = moment.utc(this.range.from);\n      if (last - from < -10000) {\n        this.datapointsOutside = true;\n      }\n\n      this.datapointsCount += datapoints.length;\n      this.panel.tooltip.msResolution = this.panel.tooltip.msResolution || series.isMsResolutionNeeded();\n    }\n\n\n    return series;\n  }\n\n  onRender() {\n    if (!this.seriesList) { return; }\n\n    for (let series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis-1].format = series.unit;\n      }\n    }\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  toggleSeries(serie, event) {\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (this.hiddenSeries[serie.alias]) {\n        delete this.hiddenSeries[serie.alias];\n      } else {\n        this.hiddenSeries[serie.alias] = true;\n      }\n    } else {\n      this.toggleSeriesExclusiveMode(serie);\n    }\n    this.render();\n  }\n\n  toggleSeriesExclusiveMode (serie) {\n    var hidden = this.hiddenSeries;\n\n    if (hidden[serie.alias]) {\n      delete hidden[serie.alias];\n    }\n\n    // check if every other series is hidden\n    var alreadyExclusive = _.every(this.seriesList, value => {\n      if (value.alias === serie.alias) {\n        return true;\n      }\n\n      return hidden[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      _.each(this.seriesList, value => {\n        delete this.hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      _.each(this.seriesList, value => {\n        if (value.alias === serie.alias) {\n          return;\n        }\n\n        this.hiddenSeries[value.alias] = true;\n      });\n    }\n  }\n\n  toggleAxis(info) {\n    var override = _.findWhere(this.panel.seriesOverrides, {alias: info.alias});\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    info.yaxis = override.yaxis = info.yaxis === 2 ? 1 : 2;\n    this.render();\n  };\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  // Called from panel menu\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.refresh();\n  }\n\n  legendValuesOptionChanged() {\n    var legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  exportCsv() {\n    fileExport.exportSeriesListToCsv(this.seriesList);\n  }\n\n  exportCsvColumns() {\n    fileExport.exportSeriesListToCsvColumns(this.seriesList);\n  }\n}\n\nHistogramCtrl.template = template;\n"]}